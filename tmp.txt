https://stackoverflow.com/questions/48075169/semantic-commit-type-when-remove-something


fix: A bug fix
fix (bug fix for the user, not a fix to a build script)
🐛 Fixing a bug.
    🚑 Critical hotfix.
    🔒 Fixing security issues.
    🍎 Fixing something on macOS.
    🐧 Fixing something on Linux.
    🏁 Fixing something on Windows.
    🤖 Fixing something on Android.
    🍏 Fixing something on iOS.
💚 Fixing CI Build.
✏️ Fixing typos.

perf: A code change that improves performance
⚡️ Improving performance.

refactor: A code change that neither fixes a bug nor adds a feature
refactor (refactoring production code, eg. renaming a variable)

♻️ Refactoring code.
    🎨 Improving structure / format of the code.
    🔥 Removing code or files.
    🏗 Making architectural changes.
    🏷️ Adding or updating types (Flow, TypeScript)
    📦 Updating compiled files or packages.
    👽 Updating code due to external API changes.
    📌 Pinning dependencies to specific versions.
        ➕ Adding a dependency.
        ➖ Removing a dependency.
        ⬇️ Downgrading dependencies.
        ⬆️ Upgrading dependencies.
    🚧 Work in progress.
    🔖 Releasing / Version tags.
    ⏪ Reverting changes.
    🔀 Merging branches.
    👌 Updating code due to code review changes.
    🚚 Moving or renaming files.
    🗃 Performing database related changes.
    🔧 Changing configuration files.
    🐳 Work about Docker.
    ☸️ Work about Kubernetes

test: Adding missing tests or correcting existing tests
test (adding missing tests, refactoring tests; no production code change)

✅ Updating tests.
    🤡 Mocking things.
    📸 Adding or updating snapshots

docs: Documentation only changes
docs (changes to the documentation)
📝 Writing docs.
    💡 Documenting source code.
    📄 Adding or updating license.
    👥 Adding contributor(s).


style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
style (formatting, missing semi colons, etc; no production code change)

🚨 Removing linter warnings.


build: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)
chore (updating grunt tasks etc; no production code change)

🚀 Deploying stuff.
👷 Adding CI build system.
🙈 Adding or updating a .gitignore file




ci: Changes to our CI configuration files and scripts (example scopes: Circle, BrowserStack, SauceLabs)

feat: A new feature
feat (new feature for the user, not a new feature for build script)

✨ Introducing new features.
    📈 Adding analytics or tracking code.
    🔊 Adding logs.
    🔇 Removing logs.
    🥚 Adding an easter egg.
    💥 Introducing breaking changes.
    🚸 Improving user experience / usability.
        ♿️ Improving accessibility.
        🌐 Internationalization and localization.
        📱 Working on responsive design.
        🔍 Improving SEO
    💬 Updating text and literals.
    💄 Updating the UI and style files.
        🍱 Adding or updating assets.
    🎉 Initial commit.


junk
💩 Writing bad code that needs to be improved.
🍻 Writing code drunkenly.
⚗ Experimenting new things


